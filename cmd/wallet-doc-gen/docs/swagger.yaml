definitions:
  core.Response:
    properties:
      code:
        description: 数据集
        type: integer
      message:
        type: string
      requestId:
        type: string
    type: object
  server.Response:
    properties:
      code:
        type: integer
      data: {}
    type: object
  v1.BlockChain:
    properties:
      chain_id:
        type: integer
      chain_name:
        type: string
      createdAt:
        type: string
      erc_20_tokens:
        items:
          $ref: '#/definitions/v1.Contract'
        type: array
      extend:
        $ref: '#/definitions/v1.Extend'
      id:
        type: integer
      infra_http:
        type: string
      infra_websocket:
        type: string
      updatedAt:
        type: string
    type: object
  v1.BlockChainList:
    properties:
      current_page:
        type: integer
      items:
        items:
          $ref: '#/definitions/v1.BlockChain'
        type: array
      total_count:
        type: integer
      total_page:
        type: integer
    type: object
  v1.Contract:
    properties:
      chain_id:
        description: 外键
        type: integer
      contract_addr:
        type: string
      decimals:
        type: string
      id:
        type: integer
      name:
        type: string
      symbol:
        type: string
      type:
        type: string
    type: object
  v1.Extend:
    additionalProperties: true
    type: object
info:
  contact: {}
paths:
  /healthz:
    get:
      consumes:
      - application/json
      description: 系统健康检查
      responses:
        "200":
          description: '{"code": 200, "data":{"status": "ok"} }'
          schema:
            $ref: '#/definitions/server.Response'
      summary: 健康检查
      tags:
      - 系统服务
  /v1/iamgeek/chains:
    get:
      description: 获取接口管理列表
      parameters:
      - description: 页条数
        in: query
        name: limit
        type: integer
      - description: 页码
        in: query
        name: offset
        type: integer
      responses:
        "200":
          description: '{"code": 200, "message":"Ok","data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/core.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1.BlockChainList'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/core.Response'
      summary: 获取区块链列表
      tags:
      - 区块链管理
    post:
      description: 创建一个链
      parameters:
      - description: 链数据
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.BlockChain'
      responses:
        "200":
          description: '{"code": 200, "message":"Ok","data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/core.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1.BlockChain'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/core.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/core.Response'
      summary: 创建一个链
      tags:
      - 区块链管理
  /v1/iamgeek/chains/{id}:
    delete:
      description: 根据id删除区块链
      parameters:
      - description: 主键Id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, message:"Ok", "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/core.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1.BlockChain'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/core.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/core.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/core.Response'
      summary: 根据id删除区块链
      tags:
      - 区块链管理
    get:
      description: 获取区块链详情
      parameters:
      - description: 主键Id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, message:"ok", "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/core.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1.BlockChain'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/core.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/core.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/core.Response'
      summary: 获取区块链详情
      tags:
      - 区块链管理
    put:
      description: 更新区块链信息
      parameters:
      - description: 主键id
        in: path
        name: id
        required: true
        type: integer
      - description: 链数据
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1.BlockChain'
      responses:
        "200":
          description: '{"code": 200, "message":"Ok", "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/core.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1.BlockChain'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/core.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/core.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/core.Response'
      summary: 更新区块链信息
      tags:
      - 区块链管理
  /version:
    get:
      consumes:
      - application/json
      description: 系统版本查询
      responses:
        "200":
          description: '{"code": 200, "data":{"version": "latest"} }'
          schema:
            $ref: '#/definitions/server.Response'
      summary: 系统版本
      tags:
      - 系统服务
swagger: "2.0"
